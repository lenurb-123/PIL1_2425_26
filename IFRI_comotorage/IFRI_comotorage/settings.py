"""
Django settings for IFRI_comotorage project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from django.urls import reverse_lazy
BASE_DIR = Path(__file__).resolve().parent.parent

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4vy4)k3y1-rmwzsldh6hxm*&yy^2keqhix%kbpf^)zve^7nl^s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'widget_tweaks',
    'django.contrib.humanize',
    'comptes',
    'trajets',
    'discussions',
    'channels',
    'django_otp',
    'django_otp.plugins.otp_totp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django_otp.middleware.OTPMiddleware',
]

ROOT_URLCONF = 'IFRI_comotorage.urls'

SITE_ID = 1

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'IFRI_comotorage.wsgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [("127.0.0.1", 6379)],  # ou localhost
        },
    },
}

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # la persistance
SESSION_COOKIE_AGE = 60 * 60 * 24 * 30   # 30 jours par défaut (sera écrasé si set_expiry(0) est utilisé)

# Pour autoriser les connexions WebSocket depuis ton navigateur
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",
]
# CORS_ALLOW_ALL_ORIGINS = True  # Pour autoriser toutes les origines (à utiliser avec précaution en production)
# CORS_ALLOW_CREDENTIALS = True  # Pour autoriser les cookies et les en-têtes d'authentification



# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configure the database settings for MySQL
# Ensure you have the MySQL client installed: pip install mysqlclient
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'IFRI_comotorage',
        'USER': 'root',
        'PASSWORD': 'votre_mot_de_passe_sql',
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

LOGIN_URL = reverse_lazy('connexion')



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'Africa/Porto-Novo'

USE_I18N = True

USE_TZ = True

DATE_INPUT_FORMATS = [
    '%d/%m/%Y',  # '25/10/2023'
    '%Y-%m-%d',  # '2023-10-25'
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

import os
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]




# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'comptes.Utilisateur'

LOGIN_REDIRECT_URL = reverse_lazy('accueil')
ACCOUNT_LOGOUT_REDIRECT_URL = '/connexion/'

# (optionnel) pour que les utilisateurs se connectent avec leur email
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False



AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # par défaut
    'comptes.backends.EmailBackend',              # <- Ton backend personnalisé (exemple)
]

# Configure the session engine to use database sessions
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10MB
FILE_UPLOAD_PERMISSIONS = 0o644
FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755

# Allowed file types
ALLOWED_IMAGE_TYPES = ['image/jpeg', 'image/png', 'image/gif', 'image/webp']
ALLOWED_VIDEO_TYPES = ['video/mp4', 'video/webm', 'video/ogg']
ALLOWED_AUDIO_TYPES = ['audio/mpeg', 'audio/ogg', 'audio/wav']
ALLOWED_DOCUMENT_TYPES = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']

# Create media directories if they don't exist
os.makedirs(os.path.join(MEDIA_ROOT, 'messages'), exist_ok=True)
os.makedirs(os.path.join(MEDIA_ROOT, 'discussions'), exist_ok=True)
os.makedirs(os.path.join(MEDIA_ROOT, 'profiles'), exist_ok=True)

# 2FA Settings
OTP_TOTP_ISSUER = 'IFRI Comotorage'

# Require 2FA for admin
ADMIN_REQUIRE_2FA = True

