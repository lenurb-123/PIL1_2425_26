# Generated by Django 5.1.7 on 2025-06-18 20:34

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('private', 'Privé'), ('group', 'Groupe')], default='private', max_length=10)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('actif', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('message', 'Nouveau message'), ('trajet', 'Nouveau trajet'), ('matching', 'Matching trouvé'), ('system', 'Notification système')], max_length=20)),
                ('titre', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('lu', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('lien', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('vehicule', models.CharField(blank=True, max_length=100, null=True)),
                ('immatriculation', models.CharField(blank=True, max_length=20, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('adresse', models.CharField(blank=True, max_length=200, null=True)),
                ('ville', models.CharField(blank=True, max_length=100, null=True)),
                ('departement', models.CharField(blank=True, max_length=100, null=True)),
                ('photo_profil', models.ImageField(blank=True, null=True, upload_to='profils/')),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('est_verifie', models.BooleanField(default=False)),
                ('est_actif', models.BooleanField(default=True)),
                ('est_bloque', models.BooleanField(default=False)),
                ('date_blocage', models.DateTimeField(blank=True, null=True)),
                ('raison_blocage', models.TextField(blank=True, null=True)),
                ('date_derniere_modification', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('role', models.CharField(choices=[('conducteur', 'Conducteur'), ('passager', 'Passager')], default='passager', max_length=20)),
                ('adresse_depart_habituelle', models.CharField(blank=True, max_length=100)),
                ('heure_depart_habituelle', models.TimeField(blank=True, null=True)),
                ('heure_arrivee_habituelle', models.TimeField(blank=True, null=True)),
                ('marque_vehicule', models.CharField(blank=True, max_length=100)),
                ('modele_vehicule', models.CharField(blank=True, max_length=100)),
                ('places_disponibles', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('deux_facteurs_active', models.BooleanField(default=False, verbose_name='2FA activée')),
                ('deux_facteurs_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Code 2FA')),
                ('deux_facteurs_code_expiration', models.DateTimeField(blank=True, null=True, verbose_name='Expiration code 2FA')),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('totp_secret', models.CharField(blank=True, max_length=32, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
                'db_table': 'comptes_utilisateur',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='comptes.conversation')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('date_envoie', models.DateTimeField(auto_now_add=True)),
                ('lu', models.BooleanField(default=False)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='messages_fichiers/')),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comptes_messages_recus', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date_envoie'],
            },
        ),
    ]
